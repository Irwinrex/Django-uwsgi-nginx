# Define upstream server using uWSGI
upstream django {
    # ip_hash; # This enables ip sticky
    # hash $cookie_sessionID consistent; #sessionID sticky
    server api:7000;  # Replace with the hostname of your Django/uWSGI container
}

# Server configuration
server {
    listen 80;  # Listen on port 80 (or any desired port)
    # server_name localhost;  # Replace with your domain name or container hostname
    # Forward requests to uWSGI
    location / {
        proxy_pass http://django;
        include /etc/nginx/uwsgi_params;  # Include uWSGI parameters
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization;
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
    }

    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server_tokens off;
    sendfile    on;
    tcp_nopush  on;

    # Timeoouts
    keepalive_timeout  65;
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 15m;
    large_client_header_buffers 2 1k;

    # Gzip Settings
    gzip  on;
    gzip_comp_level 4;  # Compression level (adjust as needed)
    gzip_types text/plain application/xml application/json;
    gzip_min_length 1000;
    gzip_proxied no-cache no-store private expired auth;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'";

}
 # Rate limit
 limit_req_zone $binary_remote_addr zone=one:10m rate=50r/s;
 limit_req zone=one burst=50;